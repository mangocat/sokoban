class Box{
	field int x, y;
	field int memAddress;
	
	constructor Box new (int xlocation, int ylocation) {
		let x = xlocation;
		let y = ylocation;
		do draw();
		return this;
	}

	method void dispose() {
    	do Memory.deAlloc(this);
    	return;
   	}

   	method void draw() {
		let memAddress = 16384+(y*512)+x;
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -8185);
		do Memory.poke(memAddress+96, -12277);
		do Memory.poke(memAddress+128, -14317);
		do Memory.poke(memAddress+160, -15325);
		do Memory.poke(memAddress+192, -15805);
		do Memory.poke(memAddress+224, -15997);
		do Memory.poke(memAddress+256, -15997);
		do Memory.poke(memAddress+288, -15805);
		do Memory.poke(memAddress+320, -15325);
		do Memory.poke(memAddress+352, -14317);
		do Memory.poke(memAddress+384, -12277);
		do Memory.poke(memAddress+416, -8185);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		return;
	}

	method void erase(){
		let memAddress = 16384+(y*512)+x;
		do Memory.poke(memAddress+0  , 0);
		do Memory.poke(memAddress+32 , 0);
		do Memory.poke(memAddress+64 , 0);
		do Memory.poke(memAddress+96 , 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		return;
	}

	method void moveUp() {
        do erase();
        let y = y - 1;
        do draw();
    	return;
    }

    method void moveDown() {
        do erase();
        let y = y + 1;
        do draw();
    	return;
    }

    method void moveLeft() {
        do erase();
        let x = x - 1;
        do draw();
    	return;
    }

    method void moveRight() {
        do erase();
        let x = x + 1;
        do draw();
    	return;
    }
}